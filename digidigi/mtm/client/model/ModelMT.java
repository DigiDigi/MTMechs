// Date: 5/1/2013 8:34:30 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX



package digidigi.mtm.client.model;

import cpw.mods.fml.relauncher.Side;
import cpw.mods.fml.relauncher.SideOnly;
import digidigi.mtm.common.EntityMT;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLiving;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.util.MathHelper;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;



@SideOnly(Side.CLIENT)
public class ModelMT extends ModelBase
{
    public ModelRenderer mech;
    public ModelRenderer fplate;
    public ModelRenderer fmlplate;
    public ModelRenderer fmrplate;
    public ModelRenderer flplate;
    public ModelRenderer frplate;
    public ModelRenderer lplate;
    public ModelRenderer lplate2;
    public ModelRenderer lplate3;
    public ModelRenderer lplate4;
    public ModelRenderer rplate;
    public ModelRenderer rplate2;
    public ModelRenderer rplate3;
    public ModelRenderer rplate4;
    public ModelRenderer seatfloor;
    public ModelRenderer seatback;
    public ModelRenderer ControlL;
    public ModelRenderer ControlM;
    public ModelRenderer ControlR;
    public ModelRenderer engine;
    public ModelRenderer leftcanbot;
    public ModelRenderer rightcanbot;
    public ModelRenderer leftcan;
    public ModelRenderer rightcan;
    public ModelRenderer leftstack;
    public ModelRenderer rightstack;
    public ModelRenderer bottom;
    public ModelRenderer magicore;
    public ModelRenderer magiplatetop;
    public ModelRenderer magiplatebot;
    public ModelRenderer magiplateleft;
    public ModelRenderer magiplateright;
    public ModelRenderer leftclawbl;
    public ModelRenderer leftclawbr;
    public ModelRenderer leftclawtl;
    public ModelRenderer leftclawtr;
    public ModelRenderer leftwrist;
    public ModelRenderer leftarm;
    public ModelRenderer leftupperarm;
    public ModelRenderer leftarmnode;
    public ModelRenderer rightclawbl;
    public ModelRenderer rightclawbr;
    public ModelRenderer rightclawtl;
    public ModelRenderer rightclawtr;
    public ModelRenderer rightwrist;
    public ModelRenderer rightarm;
    public ModelRenderer rightupperarm;
    public ModelRenderer rightarmnode;
    public ModelRenderer lefthip;
    public ModelRenderer leftupperleg;
    public ModelRenderer leftlegnode;
    public ModelRenderer leftlowerleg;
    public ModelRenderer leftfoot;
    public ModelRenderer leftfootbase;
    public ModelRenderer lefttoe;
    public ModelRenderer leftbackltoe;
    public ModelRenderer leftbackrtoe;
    public ModelRenderer leftheel;
    public ModelRenderer righthip;
    public ModelRenderer rightupperleg;
    public ModelRenderer rightlegnode;
    public ModelRenderer rightlowerleg;
    public ModelRenderer rightfoot;
    public ModelRenderer rightfootbase;
    public ModelRenderer righttoe;
    public ModelRenderer rightbackltoe;
    public ModelRenderer rightbackrtoe;
    public ModelRenderer rightheel;
    public ModelRenderer axle;
  
  public ModelMT()
  {
    textureWidth = 128;
    textureHeight = 128;
    
    //Holds all the pieces.
    mech = new ModelRenderer(this, 0, 0);
    mech.setRotationPoint(0F, 0F, 0F);
    setRotation(mech, 0F, 0F, 0F);
    
    //Holds mainly the torso pieces.
    axle = new ModelRenderer(this, 0, 0);
    axle.setRotationPoint(14F, -9F, -4F);
    setRotation(axle, 0F, 0F, 0F);
    
    fplate = new ModelRenderer(this, 0, 69);
    fplate.addBox(0F, 0F, 0F, 2, 8, 8);
    fplate.setRotationPoint(14F, -9F, -4F);
    fplate.setTextureSize(128, 128);
    fplate.mirror = true;
    setRotation(fplate, 0F, 0F, 0F);
    fmlplate = new ModelRenderer(this, 0, 35);
    fmlplate.addBox(0F, 0F, 0F, 2, 8, 2);
    fmlplate.setRotationPoint(12F, -8F, 4F);
    fmlplate.setTextureSize(128, 128);
    fmlplate.mirror = true;
    setRotation(fmlplate, 0F, 0F, 0F);
    fmrplate = new ModelRenderer(this, 0, 35);
    fmrplate.addBox(0F, 0F, 0F, 2, 8, 2);
    fmrplate.setRotationPoint(12F, -8F, -6F);
    fmrplate.setTextureSize(128, 128);
    fmrplate.mirror = true;
    setRotation(fmrplate, 0F, 0F, 0F);
    flplate = new ModelRenderer(this, 0, 35);
    flplate.addBox(0F, 0F, 0F, 2, 8, 2);
    flplate.setRotationPoint(10F, -7F, 6F);
    flplate.setTextureSize(128, 128);
    flplate.mirror = true;
    setRotation(flplate, 0F, 0F, 0F);
    frplate = new ModelRenderer(this, 0, 35);
    frplate.addBox(0F, 0F, 0F, 2, 8, 2);
    frplate.setRotationPoint(10F, -7F, -8F);
    frplate.setTextureSize(128, 128);
    frplate.mirror = true;
    setRotation(frplate, 0F, 0F, 0F);
    lplate = new ModelRenderer(this, 0, 26);
    lplate.addBox(0F, 0F, 0F, 12, 7, 2);
    lplate.setRotationPoint(-2F, -6F, 8F);
    lplate.setTextureSize(128, 128);
    lplate.mirror = true;
    setRotation(lplate, 0F, 0F, 0F);
    lplate2 = new ModelRenderer(this, 12, 35);
    lplate2.addBox(0F, 0F, 0F, 4, 2, 6);
    lplate2.setRotationPoint(-2F, -7F, 8F);
    lplate2.setTextureSize(128, 128);
    lplate2.mirror = true;
    setRotation(lplate2, 0F, 0F, 0F);
    lplate3 = new ModelRenderer(this, 0, 20);
    lplate3.addBox(0F, 0F, 0F, 2, 2, 4);
    lplate3.setRotationPoint(2F, -6F, 10F);
    lplate3.setTextureSize(128, 128);
    lplate3.mirror = true;
    setRotation(lplate3, 0F, 0F, 0F);
    lplate4 = new ModelRenderer(this, 12, 20);
    lplate4.addBox(0F, 0F, 0F, 2, 2, 4);
    lplate4.setRotationPoint(4F, -4F, 10F);
    lplate4.setTextureSize(128, 128);
    lplate4.mirror = true;
    setRotation(lplate4, 0F, 0F, 0F);
    rplate = new ModelRenderer(this, 0, 26);
    rplate.addBox(0F, 0F, 0F, 12, 7, 2);
    rplate.setRotationPoint(-2F, -6F, -10F);
    rplate.setTextureSize(128, 128);
    rplate.mirror = true;
    setRotation(rplate, 0F, 0F, 0F);
    rplate2 = new ModelRenderer(this, 12, 35);
    rplate2.addBox(0F, 0F, 0F, 4, 2, 6);
    rplate2.setRotationPoint(-2F, -7F, -14F);
    rplate2.setTextureSize(128, 128);
    rplate2.mirror = true;
    setRotation(rplate2, 0F, 0F, 0F);
    rplate3 = new ModelRenderer(this, 0, 20);
    rplate3.addBox(0F, 0F, 0F, 2, 2, 4);
    rplate3.setRotationPoint(2F, -6F, -14F);
    rplate3.setTextureSize(128, 128);
    rplate3.mirror = true;
    setRotation(rplate3, 0F, 0F, 0F);
    rplate4 = new ModelRenderer(this, 12, 20);
    rplate4.addBox(0F, 0F, 0F, 2, 2, 4);
    rplate4.setRotationPoint(4F, -4F, -14F);
    rplate4.setTextureSize(128, 128);
    rplate4.mirror = true;
    setRotation(rplate4, 0F, 0F, 0F);
    seatfloor = new ModelRenderer(this, 72, 111);
    seatfloor.addBox(0F, 0F, 0F, 12, 1, 16);
    seatfloor.setRotationPoint(-2F, -2F, -8F);
    seatfloor.setTextureSize(128, 128);
    seatfloor.mirror = true;
    setRotation(seatfloor, 0F, 0F, 0F);
    seatback = new ModelRenderer(this, 98, 105);
    seatback.addBox(0F, 0F, 0F, 2, 11, 12);
    seatback.setRotationPoint(-4F, -13F, -6F);
    seatback.setTextureSize(128, 128);
    seatback.mirror = true;
    setRotation(seatback, 0F, 0F, -0.1745329F);
    ControlL = new ModelRenderer(this, 24, 118);
    ControlL.addBox(0F, 0F, 0F, 2, 8, 2);
    ControlL.setRotationPoint(10F, -10F, 4F);
    ControlL.setTextureSize(128, 128);
    ControlL.mirror = true;
    setRotation(ControlL, 0F, 0F, 0F);
    ControlM = new ModelRenderer(this, 24, 106);
    ControlM.addBox(0F, 0F, 0F, 4, 4, 8);
    ControlM.setRotationPoint(10F, -6F, -4F);
    ControlM.setTextureSize(128, 128);
    ControlM.mirror = true;
    setRotation(ControlM, 0F, 0F, 0F);
    ControlR = new ModelRenderer(this, 24, 118);
    ControlR.addBox(0F, 0F, 0F, 2, 8, 2);
    ControlR.setRotationPoint(10F, -10F, -6F);
    ControlR.setTextureSize(128, 128);
    ControlR.mirror = true;
    setRotation(ControlR, 0F, 0F, 0F);
    engine = new ModelRenderer(this, 94, 0);
    engine.addBox(0F, 0F, 0F, 7, 14, 10);
    engine.setRotationPoint(-10F, -9F, -5F);
    engine.setTextureSize(128, 128);
    engine.mirror = true;
    setRotation(engine, 0F, 0F, 0F);
    bottom = new ModelRenderer(this, 82, 24);
    bottom.addBox(0F, 0F, 0F, 13, 7, 10);
    bottom.setRotationPoint(-4F, 0F, -5F);
    bottom.setTextureSize(128, 128);
    bottom.mirror = true;
    setRotation(bottom, 0F, 0F, 0F);
    leftcanbot = new ModelRenderer(this, 0, 88);
    leftcanbot.addBox(0F, 0F, 0F, 6, 6, 6);
    leftcanbot.setRotationPoint(-8F, -1F, 5F);
    leftcanbot.setTextureSize(128, 128);
    leftcanbot.mirror = true;
    setRotation(leftcanbot, 0F, 0F, 0F);
    rightcanbot = new ModelRenderer(this, 0, 88);
    rightcanbot.addBox(0F, 0F, 0F, 6, 6, 6);
    rightcanbot.setRotationPoint(-8F, -1F, -11F);
    rightcanbot.setTextureSize(128, 128);
    rightcanbot.mirror = true;
    setRotation(rightcanbot, 0F, 0F, 0F);
    leftcan = new ModelRenderer(this, 0, 100);
    leftcan.addBox(0F, 0F, 0F, 6, 10, 6);
    leftcan.setRotationPoint(-8F, -11F, 6F);
    leftcan.setTextureSize(128, 128);
    leftcan.mirror = true;
    setRotation(leftcan, 0F, 0F, 0F);
    rightcan = new ModelRenderer(this, 0, 100);
    rightcan.addBox(0F, 0F, 0F, 6, 10, 6);
    rightcan.setRotationPoint(-8F, -11F, -12F);
    rightcan.setTextureSize(128, 128);
    rightcan.mirror = true;
    setRotation(rightcan, 0F, 0F, 0F);
    leftstack = new ModelRenderer(this, 120, 58);
    leftstack.addBox(0F, 0F, 0F, 2, 8, 2);
    leftstack.setRotationPoint(-6F, -19F, 8F);
    leftstack.setTextureSize(128, 128);
    leftstack.mirror = true;
    setRotation(leftstack, 0F, 0F, 0F);
    rightstack = new ModelRenderer(this, 120, 58);
    rightstack.addBox(0F, 0F, 0F, 2, 8, 2);
    rightstack.setRotationPoint(-6F, -19F, -10F);
    rightstack.setTextureSize(128, 128);
    rightstack.mirror = true;
    setRotation(rightstack, 0F, 0F, 0F);
    magicore = new ModelRenderer(this, 55, 120);
    magicore.addBox(0F, 0F, 0F, 4, 4, 4);
    magicore.setRotationPoint(10F, 0F, -2F);
    magicore.setTextureSize(128, 128);
    magicore.mirror = true;
    setRotation(magicore, 0F, 0F, 0F);
    magiplatetop = new ModelRenderer(this, 42, 112);
    magiplatetop.addBox(0F, 0F, 0F, 6, 1, 6);
    magiplatetop.setRotationPoint(9F, -1F, -3F);
    magiplatetop.setTextureSize(128, 128);
    magiplatetop.mirror = true;
    setRotation(magiplatetop, 0F, 0F, 0F);
    magiplatebot = new ModelRenderer(this, 48, 112);
    magiplatebot.addBox(0F, 0F, 0F, 6, 1, 6);
    magiplatebot.setRotationPoint(9F, 4F, -3F);
    magiplatebot.setTextureSize(128, 128);
    magiplatebot.mirror = true;
    setRotation(magiplatebot, 0F, 0F, 0F);
    magiplateleft = new ModelRenderer(this, 53, 119);
    magiplateleft.addBox(0F, 0F, 0F, 6, 4, 1);
    magiplateleft.setRotationPoint(9F, 0F, 2F);
    magiplateleft.setTextureSize(128, 128);
    magiplateleft.mirror = true;
    setRotation(magiplateleft, 0F, 0F, 0F);
    magiplateright = new ModelRenderer(this, 51, 119);
    magiplateright.addBox(0F, 0F, 0F, 6, 4, 1);
    magiplateright.setRotationPoint(9F, 0F, -3F);
    magiplateright.setTextureSize(128, 128);
    magiplateright.mirror = true;
    setRotation(magiplateright, 0F, 0F, 0F);

    leftarm = new ModelRenderer(this, 0, 0);
    leftarm.addBox(0F, 0F, 0F, 5, 4, 3);
    leftarm.setRotationPoint(5F, 5F, 12F);
    leftarm.setTextureSize(128, 128);
    leftarm.mirror = true;
    setRotation(leftarm, 0F, 0F, 0F);
    leftwrist = new ModelRenderer(this, 0, 48);
    leftwrist.addBox(0F, 0F, 0F, 5, 5, 5);
    leftwrist.setRotationPoint(5F, -1F, -1F);
    leftarm.setTextureSize(128, 128);
    leftwrist.mirror = true;
    setRotation(leftwrist, 0F, 0F, 0F);
    leftclawtl = new ModelRenderer(this, 0, 85);
    leftclawtl.addBox(0F, 0F, 0F, 9, 2, 1);
    leftclawtl.setRotationPoint(5F, 2F, 3F);
    leftclawtl.setTextureSize(128, 128);
    leftclawtl.mirror = true;
    setRotation(leftclawtl, 0F, 0F, 0F);
    leftclawtr = new ModelRenderer(this, 0, 85);
    leftclawtr.addBox(0F, 0F, 0F, 9, 2, 1);
    leftclawtr.setRotationPoint(5F, 2F, 1F);
    leftclawtr.setTextureSize(128, 128);
    leftclawtr.mirror = true;
    setRotation(leftclawtr, 0F, 0F, 0F);
    leftclawbl = new ModelRenderer(this, 0, 88);
    leftclawbl.addBox(0F, 0F, 0F, 1, 4, 1);
    leftclawbl.setRotationPoint(9F, 0F, 0F);
    leftclawbl.setTextureSize(128, 128);
    leftclawbl.mirror = true;
    setRotation(leftclawbl, 0F, 0F, 0F);
    leftclawbr = new ModelRenderer(this, 0, 88);
    leftclawbr.addBox(0F, 0F, 0F, 1, 4, 1);
    leftclawbr.setRotationPoint(9F, 0F, 0F);
    leftclawbr.setTextureSize(128, 128);
    leftclawbr.mirror = true;
    setRotation(leftclawbr, 0F, 0F, 0F);
    leftarm.addChild(leftwrist);
    leftwrist.addChild(leftclawtl);
    leftwrist.addChild(leftclawtr);
    leftclawtl.addChild(leftclawbl);
    leftclawtr.addChild(leftclawbr);
    
    leftupperarm = new ModelRenderer(this, 88, 101);
    leftupperarm.addBox(0F, 0F, 0F, 12, 2, 2);
    leftupperarm.setRotationPoint(1F, -3F, 10F);
    leftupperarm.setTextureSize(128, 128);
    leftupperarm.mirror = true;
    setRotation(leftupperarm, 0F, -0.3490659F, 0.7853982F);
    leftarmnode = new ModelRenderer(this, 112, 50);
    leftarmnode.addBox(0F, 0F, 0F, 4, 4, 4);
    leftarmnode.setRotationPoint(-2F, -5F, 10F);
    leftarmnode.setTextureSize(128, 128);
    leftarmnode.mirror = true;
    setRotation(leftarmnode, 0F, 0F, 0F);
    
    rightarm = new ModelRenderer(this, 0, 0);
    rightarm.addBox(0F, 0F, 0F, 5, 4, 3);
    rightarm.setRotationPoint(5F, 5F, -15F);
    rightarm.setTextureSize(128, 128);
    rightarm.mirror = true;
    setRotation(rightarm, 0F, 0F, 0F);
    rightwrist = new ModelRenderer(this, 0, 48);
    rightwrist.addBox(0F, 0F, 0F, 5, 5, 5);
    rightwrist.setRotationPoint(5F, -1F, -1F);
    rightarm.setTextureSize(128, 128);
    rightwrist.mirror = true;
    setRotation(rightwrist, 0F, 0F, 0F);
    rightclawtl = new ModelRenderer(this, 0, 85);
    rightclawtl.addBox(0F, 0F, 0F, 9, 2, 1);
    rightclawtl.setRotationPoint(5F, 2F, 3F);
    rightclawtl.setTextureSize(128, 128);
    rightclawtl.mirror = true;
    setRotation(rightclawtl, 0F, 0F, 0F);
    rightclawtr = new ModelRenderer(this, 0, 85);
    rightclawtr.addBox(0F, 0F, 0F, 9, 2, 1);
    rightclawtr.setRotationPoint(5F, 2F, 1F);
    rightclawtr.setTextureSize(128, 128);
    rightclawtr.mirror = true;
    setRotation(rightclawtr, 0F, 0F, 0F);
    rightclawbl = new ModelRenderer(this, 0, 88);
    rightclawbl.addBox(0F, 0F, 0F, 1, 4, 1);
    rightclawbl.setRotationPoint(9F, 0F, 0F);
    rightclawbl.setTextureSize(128, 128);
    rightclawbl.mirror = true;
    setRotation(rightclawbl, 0F, 0F, 0F);
    rightclawbr = new ModelRenderer(this, 0, 88);
    rightclawbr.addBox(0F, 0F, 0F, 1, 4, 1);
    rightclawbr.setRotationPoint(9F, 0F, 0F);
    rightclawbr.setTextureSize(128, 128);
    rightclawbr.mirror = true;
    setRotation(rightclawbr, 0F, 0F, 0F);
    rightarm.addChild(rightwrist);
    rightwrist.addChild(rightclawtl);
    rightwrist.addChild(rightclawtr);
    rightclawtl.addChild(rightclawbl);
    rightclawtr.addChild(rightclawbr);
    
    rightupperarm = new ModelRenderer(this, 88, 101);
    rightupperarm.addBox(0F, 0F, 0F, 12, 2, 2);
    rightupperarm.setRotationPoint(1F, -3F, -12F);
    rightupperarm.setTextureSize(128, 128);
    rightupperarm.mirror = true;
    setRotation(rightupperarm, 0F, 0.3490659F, 0.7853982F);
    rightarmnode = new ModelRenderer(this, 112, 50);
    rightarmnode.addBox(0F, 0F, 0F, 4, 4, 4);
    rightarmnode.setRotationPoint(-2F, -5F, -14F);
    rightarmnode.setTextureSize(128, 128);
    rightarmnode.mirror = true;
    setRotation(rightarmnode, 0F, 0F, 0F);
    
    lefthip = new ModelRenderer(this, 106, 41);
    lefthip.addBox(0F, 0F, 0F, 6, 4, 5);
    lefthip.setRotationPoint(0F, 2F, 5F);
    lefthip.setTextureSize(128, 128);
    lefthip.mirror = true;
    setRotation(lefthip, 0F, 0F, 0F);
    leftupperleg = new ModelRenderer(this, 120, 89);
    leftupperleg.addBox(0F, 0F, 0F, 2, 10, 2);
    leftupperleg.setRotationPoint(3F, 4F, 8F);
    leftupperleg.setTextureSize(128, 128);
    leftupperleg.mirror = true;
    setRotation(leftupperleg, 0F, 0F, 0.7853982F);
    leftlegnode = new ModelRenderer(this, 0, 116);
    leftlegnode.addBox(0F, 0F, 0F, 6, 6, 6);
    leftlegnode.setRotationPoint(-6F, 8F, 6F);
    leftlegnode.setTextureSize(128, 128);
    leftlegnode.mirror = true;
    setRotation(leftlegnode, 0F, 0F, 0F);
    leftlowerleg = new ModelRenderer(this, 88, 101);
    leftlowerleg.addBox(0F, 0F, 0F, 10, 2, 2);
    leftlowerleg.setRotationPoint(-2F, 12F, 8F);
    leftlowerleg.setTextureSize(128, 128);
    leftlowerleg.mirror = true;
    setRotation(leftlowerleg, 0F, 0F, 0.9599311F);
    leftfoot = new ModelRenderer(this, 50, 0);
    leftfoot.addBox(0F, 0F, 0F, 6, 4, 6);
    leftfoot.setRotationPoint(-2F, 16F, 6F);
    leftfoot.setTextureSize(128, 128);
    leftfoot.mirror = true;
    setRotation(leftfoot, 0F, 0F, 0F);
    leftfootbase = new ModelRenderer(this, 16, 0);
    leftfootbase.addBox(0F, 0F, 0F, 9, 4, 8);
    leftfootbase.setRotationPoint(-2F, 20F, 5F);
    leftfootbase.setTextureSize(128, 128);
    leftfootbase.mirror = true;
    setRotation(leftfootbase, 0F, 0F, 0F);
    lefttoe = new ModelRenderer(this, 14, 56);
    lefttoe.addBox(0F, 0F, 0F, 5, 2, 6);
    lefttoe.setRotationPoint(7F, 22F, 6F);
    lefttoe.setTextureSize(128, 128);
    lefttoe.mirror = true;
    setRotation(lefttoe, 0F, 0F, 0F);
    leftbackltoe = new ModelRenderer(this, 0, 58);
    leftbackltoe.addBox(0F, 0F, 0F, 4, 2, 4);
    leftbackltoe.setRotationPoint(-6F, 22F, 11F);
    leftbackltoe.setTextureSize(128, 128);
    leftbackltoe.mirror = true;
    setRotation(leftbackltoe, 0F, 0F, 0F);
    leftbackrtoe = new ModelRenderer(this, 0, 58);
    leftbackrtoe.addBox(0F, 0F, 0F, 4, 2, 4);
    leftbackrtoe.setRotationPoint(-6F, 22F, 3F);
    leftbackrtoe.setTextureSize(128, 128);
    leftbackrtoe.mirror = true;
    setRotation(leftbackrtoe, 0F, 0F, 0F);
    leftheel = new ModelRenderer(this, 74, 0);
    leftheel.addBox(0F, 0F, 0F, 2, 4, 6);
    leftheel.setRotationPoint(-4F, 18F, 6F);
    leftheel.setTextureSize(128, 128);
    leftheel.mirror = true;
    setRotation(leftheel, 0F, 0F, 0F);
    righthip = new ModelRenderer(this, 106, 41);
    righthip.addBox(0F, 0F, 0F, 6, 4, 5);
    righthip.setRotationPoint(0F, 2F, -10F);
    righthip.setTextureSize(128, 128);
    righthip.mirror = true;
    setRotation(righthip, 0F, 0F, 0F);
    rightupperleg = new ModelRenderer(this, 120, 89);
    rightupperleg.addBox(0F, 0F, 0F, 2, 10, 2);
    rightupperleg.setRotationPoint(3F, 4F, -10F);
    rightupperleg.setTextureSize(128, 128);
    rightupperleg.mirror = true;
    setRotation(rightupperleg, 0F, 0F, 0.7853982F);
    rightlegnode = new ModelRenderer(this, 0, 116);
    rightlegnode.addBox(0F, 0F, 0F, 6, 6, 6);
    rightlegnode.setRotationPoint(-6F, 8F, -12F);
    rightlegnode.setTextureSize(128, 128);
    rightlegnode.mirror = true;
    setRotation(rightlegnode, 0F, 0F, 0F);
    rightlowerleg = new ModelRenderer(this, 88, 101);
    rightlowerleg.addBox(0F, 0F, 0F, 10, 2, 2);
    rightlowerleg.setRotationPoint(-2F, 12F, -10F);
    rightlowerleg.setTextureSize(128, 128);
    rightlowerleg.mirror = true;
    setRotation(rightlowerleg, 0F, 0F, 0.9599311F);
    rightfoot = new ModelRenderer(this, 50, 0);
    rightfoot.addBox(0F, 0F, 0F, 6, 4, 6);
    rightfoot.setRotationPoint(-2F, 16F, -12F);
    rightfoot.setTextureSize(128, 128);
    rightfoot.mirror = true;
    setRotation(rightfoot, 0F, 0F, 0F);
    rightfootbase = new ModelRenderer(this, 16, 0);
    rightfootbase.addBox(0F, 0F, 0F, 9, 4, 8);
    rightfootbase.setRotationPoint(-2F, 20F, -13F);
    rightfootbase.setTextureSize(128, 128);
    rightfootbase.mirror = true;
    setRotation(rightfootbase, 0F, 0F, 0F);
    righttoe = new ModelRenderer(this, 14, 56);
    righttoe.addBox(0F, 0F, -3F, 5, 2, 6);
    righttoe.setRotationPoint(7F, 22F, -9F);
    righttoe.setTextureSize(128, 128);
    righttoe.mirror = true;
    setRotation(righttoe, 0F, 0F, 0F);
    rightbackltoe = new ModelRenderer(this, 0, 58);
    rightbackltoe.addBox(0F, 0F, 0F, 4, 2, 4);
    rightbackltoe.setRotationPoint(-6F, 22F, -7F);
    rightbackltoe.setTextureSize(128, 128);
    rightbackltoe.mirror = true;
    setRotation(rightbackltoe, 0F, 0F, 0F);
    rightbackrtoe = new ModelRenderer(this, 0, 58);
    rightbackrtoe.addBox(0F, 0F, 0F, 4, 2, 4);
    rightbackrtoe.setRotationPoint(-6F, 22F, -15F);
    rightbackrtoe.setTextureSize(128, 128);
    rightbackrtoe.mirror = true;
    setRotation(rightbackrtoe, 0F, 0F, 0F);
    rightheel = new ModelRenderer(this, 74, 0);
    rightheel.addBox(0F, 0F, 0F, 2, 4, 6);
    rightheel.setRotationPoint(-4F, 18F, -12F);
    rightheel.setTextureSize(128, 128);
    rightheel.mirror = true;
    setRotation(rightheel, 0F, 0F, 0F);
    axle.addChild(fplate);
    axle.addChild(fmlplate);
    axle.addChild(fmrplate);
    axle.addChild(flplate);
    axle.addChild(frplate);
    axle.addChild(lplate);
    axle.addChild(lplate2);
    axle.addChild(lplate3);
    axle.addChild(lplate4);
    axle.addChild(rplate);
    axle.addChild(rplate2);
    axle.addChild(rplate3);
    axle.addChild(rplate4);
    axle.addChild(seatfloor);
    axle.addChild(seatback);
    axle.addChild(ControlL);
    axle.addChild(ControlM);
    axle.addChild(ControlR);
    axle.addChild(engine);
    axle.addChild(bottom);
    axle.addChild(leftcanbot);
    axle.addChild(rightcanbot);
    axle.addChild(leftcan);
    axle.addChild(rightcan);
    axle.addChild(leftstack);
    axle.addChild(rightstack);
    axle.addChild(magicore);
    axle.addChild(magiplatetop);
    axle.addChild(magiplatebot);
    axle.addChild(magiplateleft);
    axle.addChild(magiplateright);
    axle.addChild(leftarmnode);
    axle.addChild(rightarmnode);
    axle.setRotationPoint(-4F, 0F, -4F);
    fplate.setRotationPoint(18F, -9F, 0F); 
    fmlplate.setRotationPoint(16F, -8F, 8F); 
    fmrplate.setRotationPoint(16F, -8F, -2F);
    flplate.setRotationPoint(14F, -7F, 10F);
    frplate.setRotationPoint(14F, -7F, -4F);
    lplate.setRotationPoint(2F, -6F, 12F);
    lplate2.setRotationPoint(2F, -7F, 12F);
    lplate3.setRotationPoint(6F, -6F, 14F);
    lplate4.setRotationPoint(8F, -4F, 14F);
    rplate.setRotationPoint(2F, -6F, -6F);
    rplate2.setRotationPoint(2F, -7F, -10F);
    rplate3.setRotationPoint(6F, -6F, -10F);
    rplate4.setRotationPoint(8F, -4F, -10F);
    seatfloor.setRotationPoint(2F, -2F, -4F); 
    seatback.setRotationPoint(0F, -13F, -2F);
    ControlL.setRotationPoint(14F, -10F, 8F);
    ControlM.setRotationPoint(14F, -6F, 0F);
    ControlR.setRotationPoint(14F, -10F, -2F);
    engine.setRotationPoint(-6F, -9F, -1F);
    bottom.setRotationPoint(0F, 0F, -1F);
    leftcanbot.setRotationPoint(-4F, -1F, 9F);
    rightcanbot.setRotationPoint(-4F, -1F, -7F);
    leftcan.setRotationPoint(-4F, -11F, 10F);
    rightcan.setRotationPoint(-4F, -11F, -8F);
    leftstack.setRotationPoint(-2F, -19F, 12F);
    rightstack.setRotationPoint(-2F, -19F, -6F);
    magicore.setRotationPoint(14F, 0F, 2F);
    magiplatetop.setRotationPoint(13F, -1F, 1F);
    magiplatebot.setRotationPoint(13F, 4F, 1F);
    magiplateleft.setRotationPoint(13F, 0F, 6F);
    magiplateright.setRotationPoint(13F, 0F, 1F);
    leftarmnode.setRotationPoint(2F, -5F, 14F);
    rightarmnode.setRotationPoint(2F, -5F, -10F);
    
    mech.addChild(axle);
    mech.addChild(leftarm);
    mech.addChild(rightarm);
    mech.addChild(leftupperarm);
    mech.addChild(rightupperarm);
    mech.addChild(lefthip);
    mech.addChild(leftupperleg);
    mech.addChild(leftlegnode);
    mech.addChild(leftlowerleg);
    mech.addChild(leftfoot);
    mech.addChild(leftfootbase);
    mech.addChild(lefttoe);
    mech.addChild(leftbackltoe);
    mech.addChild(leftbackrtoe);
    mech.addChild(leftheel);
    mech.addChild(righthip);
    mech.addChild(rightupperleg);
    mech.addChild(rightlegnode);
    mech.addChild(rightlowerleg);
    mech.addChild(rightfoot);
    mech.addChild(rightfootbase);
    mech.addChild(righttoe);
    mech.addChild(rightbackltoe);
    mech.addChild(rightbackrtoe);
    mech.addChild(rightheel);
    setRotation(mech, 0F, 1.570796F, 0F);
    
    
    
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    mech.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e1)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, e1);
  }
  
  public void setLivingAnimations(EntityLivingBase entitylivingbase, float par2, float par3, float par4) 
  {
      super.setLivingAnimations(entitylivingbase, par2, par3, par4);
      
      // (Left) Leg parts move up a unit to the air.
      // (Left) Upper leg bends and the node and lower leg move to follow the bottom of the upper leg.
      // (Left) Leg parts move down a unit to the ground.
      // While the (Left) Upper leg bends back and the lower leg parts move back, a motion is put on the model.
      // Also while that is happening the (Right) Leg parts do the same as the (Left) leg parts were doing at the beginning.
      
      // Stage 0. Default.
      // Stage 1. Left leg rises.              Right leg pulls. (entity move)
      // Stage 2. Left leg drops.               Right leg stalls. 
      // Stage 3. Left leg pulls. (entity move) Right leg rises.
      // Stage 4. Left leg stalls.              Right leg drops.
      // Stage 5. Pull back legs to default.
      
      
      EntityMT entity = (EntityMT)entitylivingbase;
      float vweight = 2.0F;

      this.axle.rotateAngleZ = entity.rotationPitch;
      
      Entity rider = null;
      if (entity.riddenByEntity != null)
      {
          rider = entity.riddenByEntity;
      }
      
      if (rider != null && entity.onGround)
      {
          if (entity.isWalking)
              {
              if (entity.walkAnimationStage == 0)
              {
                  //Defaults
                  this.leftlegnode.setRotationPoint(-6F, 8F, 6F);
                  this.leftfoot.setRotationPoint(-2F, 16F, 6F);
                  this.leftfootbase.setRotationPoint(-2F, 20F, 5F);
                  this.lefttoe.setRotationPoint(7F, 22F, 6F);
                  this.leftbackltoe.setRotationPoint(-6F, 22F, 11F);
                  this.leftbackrtoe.setRotationPoint(-6F, 22F, 3F);
                  this.leftheel.setRotationPoint(-4F, 18F, 6F);
                  this.leftlowerleg.setRotationPoint(-2F, 12F, 8F);
                  
                  this.rightlegnode.setRotationPoint(-6F, 8F, -12F);
                  this.rightfoot.setRotationPoint(-2F, 16F, -12F);
                  this.rightfootbase.setRotationPoint(-2F, 20F, -13F);
                  this.righttoe.setRotationPoint(7F, 22F, -9F);
                  this.rightbackltoe.setRotationPoint(-6F, 22F, -15F);
                  this.rightbackrtoe.setRotationPoint(-6F, 22F, -7F);
                  this.rightheel.setRotationPoint(-4F, 18F, -12F);
                  this.rightlowerleg.setRotationPoint(-2F, 12F, -10F);
                  
                  
                  setRotation(this.leftupperleg, 0F, 0F, 0.7853982F);
                  setRotation(this.rightupperleg, 0F, 0F, 0.7853982F);
                  
                  this.leftupperleg.setRotationPoint(3F, 4F, 8F);
                  this.rightupperleg.setRotationPoint(3F, 4F, -10F);
                  
        
                  this.leftupperarm.rotateAngleZ = 0.7853982F;
                  this.rightupperarm.rotateAngleZ = 0.7853982F;
                  this.leftarm.setRotationPoint(5F, 5F, 13F);
                  this.leftarm.rotateAngleZ = 0.2F;
                  this.rightarm.setRotationPoint(5F, 5F, -16F); //default to 13/-16F?
                  this.rightarm.rotateAngleZ = 0.2F;
                  
        
              }
              else if (entity.walkAnimationStage == 1)
              {
                  
                  if (entity.isSprinting())
                  {
                      this.rightarm.setRotationPoint(5F + entity.lLegMoveC / 2, 5F - entity.lLegMoveC / 2, -16F - entity.lLegMoveC / 16);
                      this.rightarm.rotateAngleZ = 0 - entity.lLegMoveC / 15;
                      this.rightupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 14) * entity.lLegMoveC;
                      this.leftarm.setRotationPoint(5F + entity.rLegMoveC / 2, 5F - entity.rLegMoveC / 2, 13F - entity.rLegMoveC / 16);
                      this.leftarm.rotateAngleZ = 0 - entity.rLegMoveC / 15;
                      this.leftupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 14) * entity.rLegMoveC;
                  }
                  else
                  {
                      this.rightarm.setRotationPoint(5F + entity.lLegMoveC / 2, 5F - entity.lLegMoveC / 2, -16F - entity.lLegMoveC / 16);
                      this.rightarm.rotateAngleZ = 0 - entity.lLegMoveC / 80;
                      this.rightupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 14) * entity.lLegMoveC;
                      this.leftarm.setRotationPoint(5F + entity.rLegMoveC / 4, 5F - entity.rLegMoveC / 4, 13F - entity.rLegMoveC / 32);
                      this.leftarm.rotateAngleZ = 0 - entity.rLegMoveC / 80;
                      this.leftupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 28) * entity.rLegMoveC;
                  }
                  
                  this.leftupperleg.rotateAngleZ = 0.7853982F - (0.7853982F / 7) * entity.lLegMoveC;
                  this.leftlegnode.setRotationPoint(-6F + entity.lLegMoveC, 8F - (entity.lLegMoveC / vweight), 6F);
                  this.leftlowerleg.setRotationPoint(-2F + entity.lLegMoveC, 12F - (entity.lLegMoveC / vweight), 8F);
                  this.leftfoot.setRotationPoint(-2F + entity.lLegMoveC, 16F - (entity.lLegMoveC / vweight), 6F);
                  this.leftfootbase.setRotationPoint(-2F + entity.lLegMoveC, 20F - (entity.lLegMoveC / vweight), 5F);
                  this.lefttoe.setRotationPoint(7F + entity.lLegMoveC, 22F - (entity.lLegMoveC / vweight), 6F);
                  this.leftbackltoe.setRotationPoint(-6F + entity.lLegMoveC, 22F - (entity.lLegMoveC / vweight), 11F);
                  this.leftbackrtoe.setRotationPoint(-6F + entity.lLegMoveC, 22F - (entity.lLegMoveC / vweight), 3F);
                  this.leftheel.setRotationPoint(-4F + entity.lLegMoveC, 18F - (entity.lLegMoveC / vweight), 6F);
                  this.rightupperleg.rotateAngleZ = 0.7853982F - (0.7853982F / 7) * entity.rLegMoveC;
                  this.rightlegnode.setRotationPoint(-6F + entity.rLegMoveC, 8F, 6F - 18);
                  this.rightlowerleg.setRotationPoint(-2F + entity.rLegMoveC, 12F, 8F - 18);
                  this.rightfoot.setRotationPoint(-2F + entity.rLegMoveC, 16F, 6F - 18);
                  this.rightfootbase.setRotationPoint(-2F + entity.rLegMoveC, 20F, 5F - 18);
                  this.righttoe.setRotationPoint(7F + entity.rLegMoveC, 22F, -9F);
                  this.rightbackltoe.setRotationPoint(-6F + entity.rLegMoveC, 22F, -15F);
                  this.rightbackrtoe.setRotationPoint(-6F + entity.rLegMoveC, 22F, -7F);
                  this.rightheel.setRotationPoint(-4F + entity.rLegMoveC, 18F, 6F - 18);
                  
        
              }
              else if (entity.walkAnimationStage == 2)
              {
        
                  if (entity.isSprinting())
                  {
                      this.rightarm.setRotationPoint(5F + entity.lLegMoveC / 2, 5F - entity.lLegMoveC / 2, -16F - entity.lLegMoveC / 16);
                      this.rightarm.rotateAngleZ = 0 - entity.lLegMoveC / 15;
                      this.rightupperarm.rotateAngleZ  = 0.7853982F - (0.7853982F / 14) * entity.lLegMoveC; 
                  }
                  else
                  {
                      this.rightarm.setRotationPoint(5F + entity.lLegMoveC / 4, 5F - entity.lLegMoveC / 4, -16F - entity.lLegMoveC / 32);
                      this.rightarm.rotateAngleZ = 0 - entity.lLegMoveC / 80;
                      this.rightupperarm.rotateAngleZ  = 0.7853982F - (0.7853982F / 28) * entity.lLegMoveC; 
                  }
        
                  this.leftupperleg.rotateAngleZ = 0.7853982F - (0.7853982F / 7) * entity.lLegMoveC;
                  this.leftlegnode.setRotationPoint(-6F + entity.lLegMoveC, 8F - (5 / vweight) + (entity.lLegDropC / vweight), 6F);
                  this.leftlowerleg.setRotationPoint(-2F + entity.lLegMoveC, 12F - (5 / vweight) + (entity.lLegDropC / vweight), 8F);
                  this.leftfoot.setRotationPoint(-2F + entity.lLegMoveC, 16F - (5 / vweight) + (entity.lLegDropC / vweight), 6F);
                  this.leftfootbase.setRotationPoint(-2F + entity.lLegMoveC, 20F - (5 / vweight) + (entity.lLegDropC / vweight), 5F);
                  this.lefttoe.setRotationPoint(7F + entity.lLegMoveC, 22F - (5 / vweight) + (entity.lLegDropC / vweight), 6F);
                  this.leftbackltoe.setRotationPoint(-6F + entity.lLegMoveC, 22F - (5 / vweight) + (entity.lLegDropC / vweight), 11F);
                  this.leftbackrtoe.setRotationPoint(-6F + entity.lLegMoveC, 22F - (5 / vweight) + (entity.lLegDropC / vweight), 3F);
                  this.leftheel.setRotationPoint(-4F + entity.lLegMoveC, 18F - (5 / vweight) + (entity.lLegDropC / vweight), 6F);
        
              }
              else if (entity.walkAnimationStage == 3)
              {
        
                  if (entity.isSprinting())
                  {
                      this.rightarm.setRotationPoint(5F + entity.lLegMoveC / 2, 5F - entity.lLegMoveC / 2, -16F - entity.lLegMoveC / 16);
                      this.rightarm.rotateAngleZ = 0 - entity.lLegMoveC / 15;
                      this.rightupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 14) * entity.lLegMoveC;
                      this.leftarm.setRotationPoint(5F + entity.rLegMoveC / 2, 5F - entity.rLegMoveC / 2, 13F - entity.rLegMoveC / 16);
                      this.leftarm.rotateAngleZ = 0 - entity.rLegMoveC / 15;
                      this.leftupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 14) * entity.rLegMoveC;
                  }
                  else
                  {
                      this.rightarm.setRotationPoint(5F + entity.lLegMoveC / 4, 5F - entity.lLegMoveC / 4, -16F - entity.lLegMoveC / 32);
                      this.rightarm.rotateAngleZ = 0 - entity.lLegMoveC / 80;
                      this.rightupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 28) * entity.lLegMoveC;
                      this.leftarm.setRotationPoint(5F + entity.rLegMoveC / 4, 5F - entity.rLegMoveC / 4, 13F - entity.rLegMoveC / 32);
                      this.leftarm.rotateAngleZ = 0 - entity.rLegMoveC / 80;
                      this.leftupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 28) * entity.rLegMoveC;
                  }
                  
                  this.leftupperleg.rotateAngleZ = 0.7853982F - (0.7853982F / 7) * entity.lLegMoveC;
                  this.leftlegnode.setRotationPoint(-6F + entity.lLegMoveC, 8F, 6F);
                  this.leftlowerleg.setRotationPoint(-2F + entity.lLegMoveC, 12F, 8F);
                  this.leftfoot.setRotationPoint(-2F + entity.lLegMoveC, 16F, 6F);
                  this.leftfootbase.setRotationPoint(-2F + entity.lLegMoveC, 20F, 5F);
                  this.lefttoe.setRotationPoint(7F + entity.lLegMoveC, 22F, 6F);
                  this.leftbackltoe.setRotationPoint(-6F + entity.lLegMoveC, 22F, 11F);
                  this.leftbackrtoe.setRotationPoint(-6F + entity.lLegMoveC, 22F, 3F);
                  this.leftheel.setRotationPoint(-4F + entity.lLegMoveC, 18F, 6F);
                  this.rightupperleg.rotateAngleZ = 0.7853982F - (0.7853982F / 7) * entity.rLegMoveC;
                  this.rightlegnode.setRotationPoint(-6F + entity.rLegMoveC, 8F - (entity.rLegMoveC / vweight), 6F - 18);
                  this.rightlowerleg.setRotationPoint(-2F + entity.rLegMoveC, 12F - (entity.rLegMoveC / vweight), 8F - 18);
                  this.rightfoot.setRotationPoint(-2F + entity.rLegMoveC, 16F - (entity.rLegMoveC / vweight), 6F - 18);
                  this.rightfootbase.setRotationPoint(-2F + entity.rLegMoveC, 20F - (entity.rLegMoveC / vweight), 5F - 18);
                  this.righttoe.setRotationPoint(7F + entity.rLegMoveC, 22F - (entity.rLegMoveC / vweight), -9F);
                  this.rightbackltoe.setRotationPoint(-6F + entity.rLegMoveC, 22F - (entity.rLegMoveC / vweight), -15F);
                  this.rightbackrtoe.setRotationPoint(-6F + entity.rLegMoveC, 22F - (entity.rLegMoveC / vweight), -7F);
                  this.rightheel.setRotationPoint(-4F + entity.rLegMoveC, 18F - (entity.rLegMoveC / vweight), 6F - 18 );
              }
              
              else if (entity.walkAnimationStage == 4)
              {
        
                  if (entity.isSprinting())
                  {
                      this.leftarm.setRotationPoint(5F + entity.rLegMoveC / 2, 5F - entity.rLegMoveC / 2, 13F - entity.rLegMoveC / 16);
                      this.leftarm.rotateAngleZ = 0 - entity.rLegMoveC / 15;
                      this.leftupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 14) * entity.rLegMoveC;
                  }
                  else
                  {
                      this.leftarm.setRotationPoint(5F + entity.rLegMoveC / 4, 5F - entity.rLegMoveC / 4, 13F - entity.rLegMoveC / 32);
                      this.leftarm.rotateAngleZ = 0 - entity.rLegMoveC / 80;
                      this.leftupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 28) * entity.rLegMoveC;
                  }
                  
                  this.rightupperleg.rotateAngleZ = 0.7853982F - (0.7853982F / 7) * entity.rLegMoveC;
                  this.rightlegnode.setRotationPoint(-6F + entity.rLegMoveC, 8F - (5 / vweight) + (entity.rLegDropC / vweight), 6F - 18);
                  this.rightlowerleg.setRotationPoint(-2F + entity.rLegMoveC, 12F - (5 / vweight) + (entity.rLegDropC / vweight), 8F - 18);
                  this.rightfoot.setRotationPoint(-2F + entity.rLegMoveC, 16F - (5 / vweight) + (entity.rLegDropC / vweight), 6F - 18);
                  this.rightfootbase.setRotationPoint(-2F + entity.rLegMoveC, 20F - (5 / vweight) + (entity.rLegDropC / vweight), 5F - 18);
                  this.righttoe.setRotationPoint(7F + entity.rLegMoveC, 22F - (5 / vweight) + (entity.rLegDropC / vweight), -9F);
                  this.rightbackltoe.setRotationPoint(-6F + entity.rLegMoveC, 22F - (5 / vweight) + (entity.rLegDropC / vweight), -15F);
                  this.rightbackrtoe.setRotationPoint(-6F + entity.rLegMoveC, 22F - (5 / vweight) + (entity.rLegDropC / vweight), -7F);
                  this.rightheel.setRotationPoint(-4F + entity.rLegMoveC, 18F - (5 / vweight) + (entity.rLegDropC / vweight), -12F);
              }
          }
          else if (entity.isReversing)
          {
              if (entity.walkAnimationStage == 0)
              {
                  //Defaults
                  this.leftlegnode.setRotationPoint(-6F, 8F, 6F);
                  this.leftfoot.setRotationPoint(-2F, 16F, 6F);
                  this.leftfootbase.setRotationPoint(-2F, 20F, 5F);
                  this.lefttoe.setRotationPoint(7F, 22F, 6F);
                  this.leftbackltoe.setRotationPoint(-6F, 22F, 11F);
                  this.leftbackrtoe.setRotationPoint(-6F, 22F, 3F);
                  this.leftheel.setRotationPoint(-4F, 18F, 6F);
                  this.leftlowerleg.setRotationPoint(-2F, 12F, 8F);
                  
                  this.rightlegnode.setRotationPoint(-6F, 8F, -12F);
                  this.rightfoot.setRotationPoint(-2F, 16F, -12F);
                  this.rightfootbase.setRotationPoint(-2F, 20F, -13F);
                  this.righttoe.setRotationPoint(7F, 22F, -9F);
                  this.rightbackltoe.setRotationPoint(-6F, 22F, -15F);
                  this.rightbackrtoe.setRotationPoint(-6F, 22F, -7F);
                  this.rightheel.setRotationPoint(-4F, 18F, -12F);
                  this.rightlowerleg.setRotationPoint(-2F, 12F, -10F);
                  
                  
                  setRotation(this.leftupperleg, 0F, 0F, 0.7853982F);
                  setRotation(this.rightupperleg, 0F, 0F, 0.7853982F);
                  
                  this.leftupperleg.setRotationPoint(3F, 4F, 8F);
                  this.rightupperleg.setRotationPoint(3F, 4F, -10F);
                  
        
                  this.leftupperarm.rotateAngleZ = 0.7853982F;
                  this.rightupperarm.rotateAngleZ = 0.7853982F;
                  this.leftarm.setRotationPoint(5F, 5F, 13F);
                  this.leftarm.rotateAngleZ = 0.2F;
                  this.rightarm.setRotationPoint(5F, 5F, -16F); //default to 13/-16F?
                  this.rightarm.rotateAngleZ = 0.2F;
                  
        
              }
              else if (entity.walkAnimationStage == 1)
              {
                  
                  if (entity.isSprinting())
                  {
                      this.rightarm.setRotationPoint(5F + entity.lLegMoveC / 2, 5F - entity.lLegMoveC / 2, -16F - entity.lLegMoveC / 16);
                      this.rightarm.rotateAngleZ = 0 - entity.lLegMoveC / 15;
                      this.rightupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 14) * entity.lLegMoveC;
                      this.leftarm.setRotationPoint(5F + entity.rLegMoveC / 2, 5F - entity.rLegMoveC / 2, 13F - entity.rLegMoveC / 16);
                      this.leftarm.rotateAngleZ = 0 - entity.rLegMoveC / 15;
                      this.leftupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 14) * entity.rLegMoveC;
                  }
                  else
                  {
                      this.rightarm.setRotationPoint(5F + entity.lLegMoveC / 2, 5F - entity.lLegMoveC / 2, -16F - entity.lLegMoveC / 16);
                      this.rightarm.rotateAngleZ = 0 - entity.lLegMoveC / 80;
                      this.rightupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 14) * entity.lLegMoveC;
                      this.leftarm.setRotationPoint(5F + entity.rLegMoveC / 4, 5F - entity.rLegMoveC / 4, 13F - entity.rLegMoveC / 32);
                      this.leftarm.rotateAngleZ = 0 - entity.rLegMoveC / 80;
                      this.leftupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 28) * entity.rLegMoveC;
                  }
                  
                  this.leftupperleg.rotateAngleZ = 0.7853982F - (0.7853982F / 7) * entity.lLegMoveC;
                  this.leftlegnode.setRotationPoint(-6F + entity.lLegMoveC, 8F, 6F);
                  this.leftlowerleg.setRotationPoint(-2F + entity.lLegMoveC, 12F, 8F);
                  this.leftfoot.setRotationPoint(-2F + entity.lLegMoveC, 16F, 6F);
                  this.leftfootbase.setRotationPoint(-2F + entity.lLegMoveC, 20F, 5F);
                  this.lefttoe.setRotationPoint(7F + entity.lLegMoveC, 22F, 6F);
                  this.leftbackltoe.setRotationPoint(-6F + entity.lLegMoveC, 22F, 11F);
                  this.leftbackrtoe.setRotationPoint(-6F + entity.lLegMoveC, 22F, 3F);
                  this.leftheel.setRotationPoint(-4F + entity.lLegMoveC, 18F, 6F);
                  this.rightupperleg.rotateAngleZ = 0.7853982F - (0.7853982F / 7) * entity.rLegMoveC;
                  this.rightlegnode.setRotationPoint(-6F + entity.rLegMoveC, 8F, 6F - 18);
                  this.rightlowerleg.setRotationPoint(-2F + entity.rLegMoveC, 12F, 8F - 18);
                  this.rightfoot.setRotationPoint(-2F + entity.rLegMoveC, 16F, 6F - 18);
                  this.rightfootbase.setRotationPoint(-2F + entity.rLegMoveC, 20F, 5F - 18);
                  this.righttoe.setRotationPoint(7F + entity.rLegMoveC, 22F, -9F);
                  this.rightbackltoe.setRotationPoint(-6F + entity.rLegMoveC, 22F, -15F);
                  this.rightbackrtoe.setRotationPoint(-6F + entity.rLegMoveC, 22F, -7F);
                  this.rightheel.setRotationPoint(-4F + entity.rLegMoveC, 18F, 6F - 18);
                  
        
              }
              else if (entity.walkAnimationStage == 2)
              {
        
                  if (entity.isSprinting())
                  {
                      this.rightarm.setRotationPoint(5F + entity.lLegMoveC / 2, 5F - entity.lLegMoveC / 2, -16F - entity.lLegMoveC / 16);
                      this.rightarm.rotateAngleZ = 0 - entity.lLegMoveC / 15;
                      this.rightupperarm.rotateAngleZ  = 0.7853982F - (0.7853982F / 14) * entity.lLegMoveC; 
                  }
                  else
                  {
                      this.rightarm.setRotationPoint(5F + entity.lLegMoveC / 4, 5F - entity.lLegMoveC / 4, -16F - entity.lLegMoveC / 32);
                      this.rightarm.rotateAngleZ = 0 - entity.lLegMoveC / 80;
                      this.rightupperarm.rotateAngleZ  = 0.7853982F - (0.7853982F / 28) * entity.lLegMoveC; 
                  }
        
                  this.leftupperleg.rotateAngleZ = 0.7853982F - (0.7853982F / 7) * entity.lLegMoveC;
                  this.leftlegnode.setRotationPoint(-6F + entity.lLegMoveC, 8F, 6F);
                  this.leftlowerleg.setRotationPoint(-2F + entity.lLegMoveC, 12F, 8F);
                  this.leftfoot.setRotationPoint(-2F + entity.lLegMoveC, 16F, 6F);
                  this.leftfootbase.setRotationPoint(-2F + entity.lLegMoveC, 20F, 5F);
                  this.lefttoe.setRotationPoint(7F + entity.lLegMoveC, 22F, 6F);
                  this.leftbackltoe.setRotationPoint(-6F + entity.lLegMoveC, 22F, 11F);
                  this.leftbackrtoe.setRotationPoint(-6F + entity.lLegMoveC, 22F, 3F);
                  this.leftheel.setRotationPoint(-4F + entity.lLegMoveC, 18F, 6F);
        
              }
              else if (entity.walkAnimationStage == 3)
              {
        
                  if (entity.isSprinting())
                  {
                      this.rightarm.setRotationPoint(5F + entity.lLegMoveC / 2, 5F - entity.lLegMoveC / 2, -16F - entity.lLegMoveC / 16);
                      this.rightarm.rotateAngleZ = 0 - entity.lLegMoveC / 15;
                      this.rightupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 14) * entity.lLegMoveC;
                      this.leftarm.setRotationPoint(5F + entity.rLegMoveC / 2, 5F - entity.rLegMoveC / 2, 13F - entity.rLegMoveC / 16);
                      this.leftarm.rotateAngleZ = 0 - entity.rLegMoveC / 15;
                      this.leftupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 14) * entity.rLegMoveC;
                  }
                  else
                  {
                      this.rightarm.setRotationPoint(5F + entity.lLegMoveC / 4, 5F - entity.lLegMoveC / 4, -16F - entity.lLegMoveC / 32);
                      this.rightarm.rotateAngleZ = 0 - entity.lLegMoveC / 80;
                      this.rightupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 28) * entity.lLegMoveC;
                      this.leftarm.setRotationPoint(5F + entity.rLegMoveC / 4, 5F - entity.rLegMoveC / 4, 13F - entity.rLegMoveC / 32);
                      this.leftarm.rotateAngleZ = 0 - entity.rLegMoveC / 80;
                      this.leftupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 28) * entity.rLegMoveC;
                  }
                  
                  this.leftupperleg.rotateAngleZ = 0.7853982F - (0.7853982F / 7) * entity.lLegMoveC;
                  this.leftlegnode.setRotationPoint(-6F + entity.lLegMoveC, 8F, 6F);
                  this.leftlowerleg.setRotationPoint(-2F + entity.lLegMoveC, 12F, 8F);
                  this.leftfoot.setRotationPoint(-2F + entity.lLegMoveC, 16F, 6F);
                  this.leftfootbase.setRotationPoint(-2F + entity.lLegMoveC, 20F, 5F);
                  this.lefttoe.setRotationPoint(7F + entity.lLegMoveC, 22F, 6F);
                  this.leftbackltoe.setRotationPoint(-6F + entity.lLegMoveC, 22F, 11F);
                  this.leftbackrtoe.setRotationPoint(-6F + entity.lLegMoveC, 22F, 3F);
                  this.leftheel.setRotationPoint(-4F + entity.lLegMoveC, 18F, 6F);
                  this.rightupperleg.rotateAngleZ = 0.7853982F - (0.7853982F / 7) * entity.rLegMoveC;
                  this.rightlegnode.setRotationPoint(-6F + entity.rLegMoveC, 8F, 6F - 18);
                  this.rightlowerleg.setRotationPoint(-2F + entity.rLegMoveC, 12F, 8F - 18);
                  this.rightfoot.setRotationPoint(-2F + entity.rLegMoveC, 16F, 6F - 18);
                  this.rightfootbase.setRotationPoint(-2F + entity.rLegMoveC, 20F, 5F - 18);
                  this.righttoe.setRotationPoint(7F + entity.rLegMoveC, 22F, -9F);
                  this.rightbackltoe.setRotationPoint(-6F + entity.rLegMoveC, 22F, -15F);
                  this.rightbackrtoe.setRotationPoint(-6F + entity.rLegMoveC, 22F, -7F);
                  this.rightheel.setRotationPoint(-4F + entity.rLegMoveC, 18F, 6F - 18 );
              }
              
              else if (entity.walkAnimationStage == 4)
              {
        
                  if (entity.isSprinting())
                  {
                      this.leftarm.setRotationPoint(5F + entity.rLegMoveC / 2, 5F - entity.rLegMoveC / 2, 13F - entity.rLegMoveC / 16);
                      this.leftarm.rotateAngleZ = 0 - entity.rLegMoveC / 15;
                      this.leftupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 14) * entity.rLegMoveC;
                  }
                  else
                  {
                      this.leftarm.setRotationPoint(5F + entity.rLegMoveC / 4, 5F - entity.rLegMoveC / 4, 13F - entity.rLegMoveC / 32);
                      this.leftarm.rotateAngleZ = 0 - entity.rLegMoveC / 80;
                      this.leftupperarm.rotateAngleZ = 0.7853982F - (0.7853982F / 28) * entity.rLegMoveC;
                  }
                  
                  this.rightupperleg.rotateAngleZ = 0.7853982F - (0.7853982F / 7) * entity.rLegMoveC;
                  this.rightlegnode.setRotationPoint(-6F + entity.rLegMoveC, 8F, 6F - 18);
                  this.rightlowerleg.setRotationPoint(-2F + entity.rLegMoveC, 12F, 8F - 18);
                  this.rightfoot.setRotationPoint(-2F + entity.rLegMoveC, 16F, 6F - 18);
                  this.rightfootbase.setRotationPoint(-2F + entity.rLegMoveC, 20F, 5F - 18);
                  this.righttoe.setRotationPoint(7F + entity.rLegMoveC, 22F, -9F);
                  this.rightbackltoe.setRotationPoint(-6F + entity.rLegMoveC, 22F, -15F);
                  this.rightbackrtoe.setRotationPoint(-6F + entity.rLegMoveC, 22F, -7F);
                  this.rightheel.setRotationPoint(-4F + entity.rLegMoveC, 18F, -12F);
              }
              
          }
          else
          {
              //defaults
              this.leftlegnode.setRotationPoint(-6F, 8F, 6F);
              this.leftfoot.setRotationPoint(-2F, 16F, 6F);
              this.leftfootbase.setRotationPoint(-2F, 20F, 5F);
              this.lefttoe.setRotationPoint(7F, 22F, 6F);
              this.leftbackltoe.setRotationPoint(-6F, 22F, 11F);
              this.leftbackrtoe.setRotationPoint(-6F, 22F, 3F);
              this.leftheel.setRotationPoint(-4F, 18F, 6F);
              this.leftlowerleg.setRotationPoint(-2F, 12F, 8F);
              
              this.rightlegnode.setRotationPoint(-6F, 8F, -12F);
              this.rightfoot.setRotationPoint(-2F, 16F, -12F);
              this.rightfootbase.setRotationPoint(-2F, 20F, -13F);
              this.righttoe.setRotationPoint(7F, 22F, -9F);
              this.rightbackltoe.setRotationPoint(-6F, 22F, -15F);
              this.rightbackrtoe.setRotationPoint(-6F, 22F, -7F);
              this.rightheel.setRotationPoint(-4F, 18F, -12F);
              this.rightlowerleg.setRotationPoint(-2F, 12F, -10F);
              
              
              setRotation(this.leftupperleg, 0F, 0F, 0.7853982F);
              setRotation(this.rightupperleg, 0F, 0F, 0.7853982F);
              
              this.leftupperleg.setRotationPoint(3F, 4F, 8F);
              this.rightupperleg.setRotationPoint(3F, 4F, -10F);
              

              this.leftupperarm.rotateAngleZ = 0.7853982F;
              this.rightupperarm.rotateAngleZ = 0.7853982F;
              this.leftarm.setRotationPoint(5F, 5F, 13F);
              this.leftarm.rotateAngleZ = 0.2F;
              this.rightarm.setRotationPoint(5F, 5F, -16F);
              this.rightarm.rotateAngleZ = 0.2F;
          }
      }
      else
      {
          //defaults
          this.leftlegnode.setRotationPoint(-6F, 8F, 6F);
          this.leftfoot.setRotationPoint(-2F, 16F, 6F);
          this.leftfootbase.setRotationPoint(-2F, 20F, 5F);
          this.lefttoe.setRotationPoint(7F, 22F, 6F);
          this.leftbackltoe.setRotationPoint(-6F, 22F, 11F);
          this.leftbackrtoe.setRotationPoint(-6F, 22F, 3F);
          this.leftheel.setRotationPoint(-4F, 18F, 6F);
          this.leftlowerleg.setRotationPoint(-2F, 12F, 8F);
          
          this.rightlegnode.setRotationPoint(-6F, 8F, -12F);
          this.rightfoot.setRotationPoint(-2F, 16F, -12F);
          this.rightfootbase.setRotationPoint(-2F, 20F, -13F);
          this.righttoe.setRotationPoint(7F, 22F, -9F);
          this.rightbackltoe.setRotationPoint(-6F, 22F, -15F);
          this.rightbackrtoe.setRotationPoint(-6F, 22F, -7F);
          this.rightheel.setRotationPoint(-4F, 18F, -12F);
          this.rightlowerleg.setRotationPoint(-2F, 12F, -10F);
          
          
          setRotation(this.leftupperleg, 0F, 0F, 0.7853982F);
          setRotation(this.rightupperleg, 0F, 0F, 0.7853982F);
          
          this.leftupperleg.setRotationPoint(3F, 4F, 8F);
          this.rightupperleg.setRotationPoint(3F, 4F, -10F);
          

          this.leftupperarm.rotateAngleZ = 0.7853982F;
          this.rightupperarm.rotateAngleZ = 0.7853982F;
          this.leftarm.setRotationPoint(5F, 5F, 13F);
          this.leftarm.rotateAngleZ = 0.2F;
          this.rightarm.setRotationPoint(5F, 5F, -16F);
          this.rightarm.rotateAngleZ = 0.2F;
      }

      
  }

}
